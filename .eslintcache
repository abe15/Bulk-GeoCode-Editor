[{"C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\index.tsx":"1","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\reportWebVitals.ts":"2","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\store.tsx":"3","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\App.tsx":"4","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\Styles.ts":"5","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\HelperFunctions.tsx":"6","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\geocodes.tsx":"7","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\SideMenu.tsx":"8","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\Header.tsx":"9","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\MyMapController.tsx":"10","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\GeoCodeInfo.tsx":"11","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\undo.tsx":"12"},{"size":809,"mtime":1644104848603,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1630201924680,"results":"15","hashOfConfig":"14"},{"size":459,"mtime":1644106798964,"results":"16","hashOfConfig":"14"},{"size":13304,"mtime":1644194271651,"results":"17","hashOfConfig":"14"},{"size":4165,"mtime":1644094158361,"results":"18","hashOfConfig":"14"},{"size":949,"mtime":1642971609659,"results":"19","hashOfConfig":"14"},{"size":5452,"mtime":1644179106718,"results":"20","hashOfConfig":"14"},{"size":533,"mtime":1633888348558,"results":"21","hashOfConfig":"14"},{"size":1861,"mtime":1631660441101,"results":"22","hashOfConfig":"14"},{"size":445,"mtime":1632008995421,"results":"23","hashOfConfig":"14"},{"size":1440,"mtime":1642983611316,"results":"24","hashOfConfig":"14"},{"size":1972,"mtime":1644169934737,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"pgi1by",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\index.tsx",["55","56"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>{' '}\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function  <PersistGate loading={null} persistor={persistStore(store)}>  </PersistGate>\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["57","58"],"C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\reportWebVitals.ts",[],"C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\store.tsx",[],"C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\App.tsx",["59","60","61","62","63","64","65","66","67","68"],"C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\Styles.ts",[],"C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\HelperFunctions.tsx",["69"],"//Create geofence with radius in Km at active delivery point\r\n\r\nexport const createGeoJSONCircle = function (\r\n  center: [number, number],\r\n  radiusInKm: number,\r\n  points: number,\r\n): any {\r\n  if (!points) points = 64;\r\n\r\n  var coords = {\r\n    latitude: center[0],\r\n    longitude: center[1],\r\n  };\r\n\r\n  var km = radiusInKm * 0.001;\r\n\r\n  let ret: [number, number][] = [];\r\n  //new Array<[number, number]>(); // = [[]];\r\n  var distanceX = km / (111.32 * Math.cos((coords.latitude * Math.PI) / 180));\r\n  var distanceY = km / 110.574;\r\n\r\n  var theta, x, y: number;\r\n  for (var i = 0; i < points; i++) {\r\n    theta = (i / points) * (2 * Math.PI);\r\n    x = distanceX * Math.cos(theta);\r\n    y = distanceY * Math.sin(theta);\r\n\r\n    ret.push([coords.longitude + x, coords.latitude + y]);\r\n  }\r\n  ret.push(ret[0]);\r\n  return {\r\n    type: 'Feature',\r\n    properties: {},\r\n    geometry: {\r\n      type: 'Polygon',\r\n      coordinates: [ret],\r\n    },\r\n  };\r\n};\r\n","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\geocodes.tsx",["70","71","72"],"C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\SideMenu.tsx",["73","74"],"/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\n\r\nimport React from 'react';\r\nimport { Upload } from './JSONInput';\r\nconst drawerWidth = 240;\r\n\r\nexport default function SideMenu(props: any) {\r\n  return (\r\n    <div\r\n      css={css`\r\n        z-index: 99;\r\n        float: left;\r\n        top: 100px;\r\n        position: absolute;\r\n        background-color: whitesmoke;\r\n        height: 85vh;\r\n        width: 250px;\r\n        overflow-y: scroll;\r\n      `}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\Header.tsx",[],"C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\MyMapController.tsx",[],"C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\GeoCodeInfo.tsx",["75","76"],"/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\n\r\nimport React from 'react';\r\n\r\ninterface GeoCode {\r\n  city: string;\r\n  addressLine1: string;\r\n  addressLine2: string;\r\n  addressLine3: string;\r\n  addressId: string;\r\n  calculationMethod: string;\r\n  countryCode: string;\r\n  district: string;\r\n  hasSinglePointCache: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  matchCode: string;\r\n  moduli: number;\r\n  normalizedKey: string;\r\n  position: string;\r\n  postalCode: string;\r\n  source: string;\r\n  tolerance: number;\r\n  tolerance2: number;\r\n  type: string;\r\n  type2: string;\r\n}\r\n\r\nexport const GeoCodeInfo = ({ props }: any) => (\r\n  <div>\r\n    <div>{props.addressLine1}</div>\r\n    <div>{props.addressLine2}</div>\r\n    <div>{props.city}</div>\r\n    <div>{props.state}</div>\r\n    <div>{props.postalCode}</div>\r\n    <div>{props.countryCode}</div>\r\n    <div>{'NAK: ' + props.normalizedKey}</div>\r\n    <div>{'Tolerance: ' + props.tolerance}</div>\r\n    <br />\r\n  </div>\r\n);\r\n/*\r\n <div>\r\n    <div>{'AddressLine 1: ' + props.addressLine1}</div>\r\n    <div>{'AddressLine 2: ' + props.addressLine2}</div>\r\n    <div>{'City: ' + props.city}</div>\r\n    <div>{'State: ' + props.state}</div>\r\n    <div>{'Postal Code: ' + props.postalCode}</div>\r\n    <div>{'Country Code: ' + props.countryCode}</div>\r\n    <div>{'NAK: ' + props.normalizedKey}</div>\r\n    <div>{'Tolerance: ' + props.tolerance}</div>\r\n    <br />\r\n  </div>\r\n\r\n*/\r\n","C:\\Users\\abe\\source\\repos\\BulkGeoCodeEditor\\src\\undo.tsx",[],{"ruleId":"77","severity":1,"message":"78","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":21},{"ruleId":"77","severity":1,"message":"81","line":9,"column":10,"nodeType":"79","messageId":"80","endLine":9,"endColumn":22},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"77","severity":1,"message":"86","line":21,"column":10,"nodeType":"79","messageId":"80","endLine":21,"endColumn":29},{"ruleId":"77","severity":1,"message":"87","line":22,"column":25,"nodeType":"79","messageId":"80","endLine":22,"endColumn":31},{"ruleId":"77","severity":1,"message":"88","line":22,"column":33,"nodeType":"79","messageId":"80","endLine":22,"endColumn":38},{"ruleId":"77","severity":1,"message":"89","line":23,"column":10,"nodeType":"79","messageId":"80","endLine":23,"endColumn":20},{"ruleId":"77","severity":1,"message":"90","line":24,"column":10,"nodeType":"79","messageId":"80","endLine":24,"endColumn":22},{"ruleId":"77","severity":1,"message":"91","line":26,"column":22,"nodeType":"79","messageId":"80","endLine":26,"endColumn":32},{"ruleId":"77","severity":1,"message":"92","line":35,"column":5,"nodeType":"79","messageId":"80","endLine":35,"endColumn":40},{"ruleId":"77","severity":1,"message":"93","line":36,"column":7,"nodeType":"79","messageId":"80","endLine":36,"endColumn":20},{"ruleId":"77","severity":1,"message":"94","line":159,"column":11,"nodeType":"79","messageId":"80","endLine":159,"endColumn":15},{"ruleId":"77","severity":1,"message":"95","line":215,"column":13,"nodeType":"79","messageId":"80","endLine":215,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":8,"column":16,"nodeType":"79","messageId":"98","endLine":8,"endColumn":22},{"ruleId":"77","severity":1,"message":"99","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":22},{"ruleId":"77","severity":1,"message":"100","line":6,"column":10,"nodeType":"79","messageId":"80","endLine":6,"endColumn":18},{"ruleId":"77","severity":1,"message":"101","line":7,"column":7,"nodeType":"79","messageId":"80","endLine":7,"endColumn":20},{"ruleId":"77","severity":1,"message":"102","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":16},{"ruleId":"77","severity":1,"message":"103","line":6,"column":7,"nodeType":"79","messageId":"80","endLine":6,"endColumn":18},{"ruleId":"77","severity":1,"message":"104","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"105","line":6,"column":11,"nodeType":"79","messageId":"80","endLine":6,"endColumn":18},"@typescript-eslint/no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","'persistStore' is defined but never used.","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'createGeoJSONCircle' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'SVGOverlay' is defined but never used.","'NotFoundPage' is defined but never used.","'LayerProps' is defined but never used.","'interactiveLayerIds1' is assigned a value but never used.","'mapController' is assigned a value but never used.","'rect' is assigned a value but never used.","'filter' is assigned a value but never used.","no-param-reassign","Assignment to function parameter 'points'.","assignmentToFunctionParam","'persistReducer' is defined but never used.","'undoable' is defined but never used.","'persistConfig' is assigned a value but never used.","'Upload' is defined but never used.","'drawerWidth' is assigned a value but never used.","'css' is defined but never used.","'GeoCode' is defined but never used.","no-global-assign","no-unsafe-negation"]